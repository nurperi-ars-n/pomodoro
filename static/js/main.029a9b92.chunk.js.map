{"version":3,"sources":["store/actions/index.js","components/Pomodoro1/index.jsx","App.js","store/reducers/index.js","index.js"],"names":["RESET","TOGGLE","FINISH","COUNTDOWN","BREAK","WORK","CHANGE","reset_pomodoro","type","Pomodoro1","dispatch","useDispatch","state","useSelector","timerSecond","alltime","useState","is_pause","setPause","is_switch","minut","workTime","setWorkTime","shortBreak","setShortBreak","longBreak","setLongBreak","useEffect","interval","setInterval","clearInterval","collapsed","setCollapsed","style","color","value","maxValue","repeat","shortBreakForCircle","longBreakForCircle","minForCircle","text","Math","floor","toString","padStart","danger","onClick","document","querySelector","backgroundColor","marginBottom","SettingOutlined","SettingFilled","width","marginTop","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","Item","icon","ThunderboltTwoTone","onChange","e","target","CustomerServiceFilled","CustomerServiceOutlined","CheckCircleOutlined","settings","Number","App","className","initialState","second","is_reset","is_finish","store","createStore","action","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.029a9b92.chunk.js","sourcesContent":["export const RESET = \"RESET\";\r\nexport const TOGGLE = \"TOGGLE\";\r\nexport const FINISH = \"TOGGLE\";\r\nexport const COUNTDOWN = \"COUNTDOWN\";\r\nexport const BREAK = \"BREAK\";\r\nexport const WORK = \"WORK\";\r\nexport const CHANGE = \"CHANGE\";\r\n\r\nexport const toggle_pomodoro = () => {\r\n  return {\r\n    type: TOGGLE,\r\n  };\r\n};\r\nexport const reset_pomodoro = () => ({\r\n  type: RESET,\r\n});\r\n\r\nexport const finish_pomodoro = () => {\r\n  return {\r\n    type: FINISH,\r\n  };\r\n};\r\n\r\nexport const count_pomodoro = () => {\r\n  return {\r\n    type: COUNTDOWN,\r\n  };\r\n};\r\n\r\nexport const break_pomodoro = () => {\r\n  return {\r\n    type: BREAK,\r\n  };\r\n};\r\nexport const work_pomadoro = () => {\r\n  return {\r\n    type: WORK,\r\n  };\r\n};\r\nexport const change_time = (settings) => {\r\n  return {\r\n    type: CHANGE,\r\n    settings,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  toggle_pomodoro,\r\n  reset_pomodoro,\r\n  count_pomodoro,\r\n  finish_pomodoro,\r\n  break_pomodoro,\r\n  work_pomadoro,\r\n  change_time,\r\n} from \"../../store/actions\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  SettingOutlined,\r\n  SettingFilled,\r\n  CustomerServiceOutlined,\r\n  CustomerServiceFilled,\r\n  ThunderboltTwoTone,\r\n  CheckCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Menu, Input } from \"antd\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\n\r\nexport const Pomodoro1 = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const timerSecond = state.alltime;\r\n  const [is_pause, setPause] = useState(state.is_pause);\r\n  const is_switch = state.is_switch;\r\n  const [workTime, setWorkTime] = useState(state.minut);\r\n  const [shortBreak, setShortBreak] = useState(state.shortBreak);\r\n  const [longBreak, setLongBreak] = useState(state.longBreak);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      if (!is_pause) {\r\n        timerSecond > 0\r\n          ? dispatch(count_pomodoro())\r\n          : dispatch(finish_pomodoro());\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n  \r\n  is_switch == false && timerSecond === 0 && dispatch(break_pomodoro());\r\n  is_switch == true && timerSecond === 0 && dispatch(work_pomadoro());\r\n\r\n  // menu\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n    if (collapsed) {\r\n      document.querySelector(\"body\").style.backgroundColor = \"#001529\";\r\n    } else {\r\n      document.querySelector(\"body\").style.backgroundColor = \"#f5f5dc\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={collapsed ? { color: \"black\" } : { color: \"#f5f5dc\" }}>\r\n        Pomodoro\r\n      </h1>\r\n\r\n      <CircularProgressbar\r\n        value={state.alltime}\r\n        maxValue={\r\n          state.is_switch == false\r\n            ? state.repeat % 3 == 0\r\n              ? state.shortBreakForCircle\r\n              : state.longBreakForCircle\r\n            : state.minForCircle\r\n        }\r\n        text={`${Math.floor(timerSecond / 60)\r\n          .toString()\r\n          .padStart(2, \"0\")}:${`${timerSecond % 60}`\r\n          .toString()   \r\n          .padStart(2, \"0\")}`}\r\n      />\r\n\r\n      <h2 style={collapsed ? { color: \"black\" } : { color: \"#f5f5dc\" }}>\r\n        {`${Math.floor(timerSecond / 60)\r\n          .toString()\r\n          .padStart(2, \"0\")}:${`${timerSecond % 60}`\r\n          .toString()\r\n          .padStart(2, \"0\")}`}{\" \"}\r\n      </h2>\r\n      <Button\r\n        danger={is_pause ? false : true}\r\n        onClick={() => {\r\n          dispatch(toggle_pomodoro());\r\n          setPause(!is_pause);\r\n        }}\r\n      >\r\n        {timerSecond > 0 ? (is_pause ? \"start\" : \"pause\") : \"break\"}\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={toggleCollapsed}\r\n        style={{ marginBottom: 16 }}\r\n      >\r\n        {collapsed ? <SettingOutlined /> : <SettingFilled />}\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        danger\r\n        onClick={() => {\r\n          dispatch(reset_pomodoro());\r\n        }}\r\n      >\r\n        reset\r\n      </Button>\r\n      <div style={{ width: 256, marginTop: \"30px\" }}>\r\n        <Menu\r\n          defaultSelectedKeys={[\"1\"]}\r\n          defaultOpenKeys={[\"sub1\"]}\r\n          mode=\"inline\"\r\n          theme={collapsed ? \"dark\" : \"light\"}\r\n          inlineCollapsed={collapsed}\r\n        >\r\n          <Menu.Item key=\"1\" icon={<ThunderboltTwoTone />}>\r\n            <Input\r\n              value={workTime}\r\n              onChange={(e) => setWorkTime(e.target.value)}\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<CustomerServiceFilled />}>\r\n            <Input\r\n              value={shortBreak}\r\n              onChange={(e) => setShortBreak(e.target.value)}\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<CustomerServiceOutlined />}>\r\n            <Input\r\n              value={longBreak}\r\n              onChange={(e) => setLongBreak(e.target.value)}\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<CheckCircleOutlined />}>\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(\r\n                  change_time({\r\n                    workTime: Number(workTime),\r\n                    shortBreak: Number(shortBreak),\r\n                    longBreak: Number(longBreak),\r\n                  })\r\n                ) && dispatch(reset_pomodoro());\r\n                setCollapsed(true);\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Pomodoro1 } from \"./components/Pomodoro1\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pomodoro1 />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  TOGGLE,\r\n  RESET,\r\n  FINISH,\r\n  COUNTDOWN,\r\n  BREAK,\r\n  WORK,\r\n  CHANGE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  minut: 0.5,\r\n  minForCircle: 30,\r\n  shortBreak: 0.1,\r\n  shortBreakForCircle: 12,\r\n  longBreak: 0.2,\r\n  longBreakForCircle: 0.2,\r\n  second: 1,\r\n  is_pause: true,\r\n  is_reset: false,\r\n  is_finish: false,\r\n  alltime: 60 * 0.5,\r\n  is_switch: true,\r\n  repeat: 3,\r\n};\r\nexport const rootReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE:\r\n      return {\r\n        ...state,\r\n        is_pause: state.alltime > 0 && state.is_pause ? false : true,\r\n      };\r\n    case RESET:\r\n      return {\r\n        ...state,\r\n        is_pause: true,\r\n        alltime: 60 * state.minut,\r\n        repeat: 3,\r\n      };\r\n\r\n    case FINISH:\r\n      return {\r\n        ...state,\r\n        is_pause: true,\r\n      };\r\n\r\n    case COUNTDOWN:\r\n      console.log(state);\r\n      if (state.repeat >= 0) {\r\n        return {\r\n          ...state,\r\n          alltime: state.alltime - 1,\r\n          is_switch: state.alltime == 1 ? !state.is_switch : state.is_switch,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          alltime: state.alltime,\r\n          is_switch: state.alltime == 1 ? !state.is_switch : state.is_switch,\r\n        };\r\n      }\r\n\r\n    case BREAK:\r\n      if (state.repeat > 1 && state.repeat % 3 == 0) {\r\n        return {\r\n          ...state,\r\n          alltime: 60 * state.longBreak,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          alltime: 60 * state.shortBreak,\r\n        };\r\n      }\r\n    case WORK:\r\n      if (state.repeat >= 1) {\r\n        state.alltime = 60;\r\n      } else {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        alltime: state.alltime * state.minut,\r\n        repeat: state.alltime == 0 ? state.repeat : state.repeat - 1,\r\n      };\r\n    case CHANGE:\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        minut: action.settings.workTime,\r\n        minForCircle: 60 * action.settings.workTime,\r\n        shortBreak: action.settings.shortBreak,\r\n        shortBreakForCircle: 60 * action.settings.shortBreak,\r\n        longBreak: action.settings.longBreak,\r\n        longBreakForCircle: 60 * action.settings.longBreak,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { rootReducers } from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"antd/dist/antd.css\";\nconst store = createStore(rootReducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}